
services:
  frontend-backoffice:
    build:
      context: ./frontend-backoffice
      dockerfile: Dockerfile
    container_name: frontend-backoffice
    ports:
      - "5174:80"  # Puerto interno de Nginx 80 a 5173 en el host
    networks:
      - app-network
    restart: always

  frontend-cliente:
    build:
      context: ./frontend-cliente
      dockerfile: Dockerfile
    container_name: frontend-cliente
    ports:
      - "5173:80"  # Puerto interno de Nginx 80 a 5173 en el host
    networks:
      - app-network
    restart: always


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=ecommerce;Username=ecommerce;Password=1111
    ports:
      - "5000:8080"
    depends_on:
      - postgres
    networks:
      - app-network   

  postgres:
    container_name: postgres
    build:
      context: ./database
      dockerfile: Dockerfile
    networks:
      - app-network
    environment:
      POSTGRES_USER: ecommerce
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
    ports:
      - "80:80"
    depends_on:
      - frontend-backoffice
      - frontend-cliente
      - backend
    networks:
      - app-network
    restart: always
    
volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
